<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hnpbc.dao.sys.RouterMapper">
  <resultMap id="BaseResultMap" type="hnpbc.entity.sys.Router">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="ID_" jdbcType="VARCHAR" property="id" />
    <result column="TITLE_" jdbcType="VARCHAR" property="title" />
    <result column="NAME_" jdbcType="VARCHAR" property="name" />
    <result column="DESCRIBE_" jdbcType="VARCHAR" property="describe" />
    <result column="SORT_ORDER_" jdbcType="INTEGER" property="sortOrder" />
    <result column="PARENT_ID_" jdbcType="VARCHAR" property="parentId" />
  </resultMap>
  <!--<resultMap id="RouterAndAuthResultMap" type="hnpbc.entity.sys.Router">-->
    <!--&lt;!&ndash;-->
      <!--huangzhongwei-->
    <!--&ndash;&gt;-->
    <!--<result column="ID_" jdbcType="VARCHAR" property="id" />-->
    <!--<result column="TITLE_" jdbcType="VARCHAR" property="title" />-->
    <!--<result column="NAME_" jdbcType="VARCHAR" property="name" />-->
    <!--<result column="DESCRIBE_" jdbcType="VARCHAR" property="describe" />-->
    <!--<result column="SORT_ORDER_" jdbcType="INTEGER" property="sortOrder" />-->
    <!--<result column="PARENT_ID_" jdbcType="VARCHAR" property="parentId" />-->
    <!--<association property="roleRouter" javaType="hnpbc.entity.sys.RoleRouter" >-->
      <!--<result column="RR_ID_" jdbcType="VARCHAR" property="id" />-->
      <!--<result column="ROLE_ID_" jdbcType="VARCHAR" property="roleId" />-->
      <!--<result column="ROUTER_ID_" jdbcType="VARCHAR" property="routerId" />-->
    <!--</association>-->
  <!--</resultMap>-->

  <!--<resultMap id="RecursionRouterAndAuthResultMap" type="hnpbc.entity.sys.Router">-->
    <!--&lt;!&ndash;-->
      <!--huangzhongwei-->
    <!--&ndash;&gt;-->
    <!--<result column="ID_" jdbcType="VARCHAR" property="id" />-->
    <!--<result column="TITLE_" jdbcType="VARCHAR" property="title" />-->
    <!--<result column="NAME_" jdbcType="VARCHAR" property="name" />-->
    <!--<result column="DESCRIBE_" jdbcType="VARCHAR" property="describe" />-->
    <!--<result column="SORT_ORDER_" jdbcType="INTEGER" property="sortOrder" />-->
    <!--<result column="PARENT_ID_" jdbcType="VARCHAR" property="parentId" />-->
    <!--<association property="roleRouter" javaType="hnpbc.entity.sys.RoleRouter" >-->
      <!--<result column="RR_ID_" jdbcType="VARCHAR" property="id" />-->
      <!--<result column="ROLE_ID_1" jdbcType="VARCHAR" property="roleId" />-->
      <!--<result column="ROUTER_ID_" jdbcType="VARCHAR" property="routerId" />-->
    <!--</association>-->
    <!--<collection property="children" ofType="RecursionRouterAndAuthResultMap" column="{id=ID_,roleId=ROLE_ID_1}" select="selectChildrenByParentId"/>-->
  <!--</resultMap>-->

  <resultMap id="RecursionRouterResultMap" type="hnpbc.entity.sys.Router">
    <!--
      huangzhongwei
    -->
    <result column="ID_" jdbcType="VARCHAR" property="id" />
    <result column="TITLE_" jdbcType="VARCHAR" property="title" />
    <result column="NAME_" jdbcType="VARCHAR" property="name" />
    <result column="DESCRIBE_" jdbcType="VARCHAR" property="describe" />
    <result column="SORT_ORDER_" jdbcType="INTEGER" property="sortOrder" />
    <result column="PARENT_ID_" jdbcType="VARCHAR" property="parentId" />
    <collection property="children" ofType="RecursionRouterResultMap" column="{id=ID_}" select="selectChildrenByParentId"/>
  </resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    ID_, TITLE_, NAME_, DESCRIBE_, SORT_ORDER_, PARENT_ID_
  </sql>
  <!--<select id="selectChildrenAndAuth" parameterType="java.lang.String" resultMap="RouterAndAuthResultMap">-->
    <!--SELECT s.ID_, s.TITLE_, s.NAME_, s.DESCRIBE_, s.SORT_ORDER_, s.PARENT_ID_ , r.ID_ as RR_ID_, r.ROLE_ID_ , r.ROUTER_ID_ FROM s_router s left join (SELECT ID_, ROLE_ID_, ROUTER_ID_ FROM s_role_router WHERE s_role_router.ROLE_ID_ = #{roleId}) r-->
     <!--on s.ID_ = r.ROUTER_ID_ where s.PARENT_ID_ = #{parentId}-->
  <!--</select>-->

  <select id="selectChildrenByParentId" resultMap="RecursionRouterResultMap">
    select
    <include refid="Base_Column_List"/>
    from s_router WHERE PARENT_ID_ = #{id} ORDER BY SORT_ORDER_ ASC
  </select>

  <select id="selectAllRecursion" resultMap="RecursionRouterResultMap">
    select
    <include refid="Base_Column_List"/>
    from s_router WHERE PARENT_ID_ ='' or PARENT_ID_ is NULL ORDER BY SORT_ORDER_ ASC
  </select>

  <select id="selectAllByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from s_router where exists( select 1 from (select router_id_ from s_role_router where exists(select 1 from s_role_member where username_ = #{username} and s_role_router.role_id_ = s_role_member.role_id_)) m where s_router.id_ = m.router_id_)
  </select>
</mapper>